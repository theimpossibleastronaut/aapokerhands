/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: netpoker.proto */

#ifndef PROTOBUF_C_netpoker_2eproto__INCLUDED
#define PROTOBUF_C_netpoker_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protobuf-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protobuf-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protobuf-c.
#endif


typedef struct Game__Card Game__Card;
typedef struct Game__Hand Game__Hand;
typedef struct Game__Player Game__Player;


/* --- enums --- */


/* --- messages --- */

struct  Game__Card
{
  ProtobufCMessage base;
  int32_t face_val;
  int32_t suit;
};
#define GAME__CARD__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__card__descriptor) \
, 0, 0 }


struct  Game__Hand
{
  ProtobufCMessage base;
  size_t n_card;
  Game__Card **card;
};
#define GAME__HAND__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__hand__descriptor) \
, 0,NULL }


struct  Game__Player
{
  ProtobufCMessage base;
  char *name;
  Game__Hand *hand;
};
#define GAME__PLAYER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&game__player__descriptor) \
, (char *)protobuf_c_empty_string, NULL }


/* Game__Card methods */
void   game__card__init
                     (Game__Card         *message);
size_t game__card__get_packed_size
                     (const Game__Card   *message);
size_t game__card__pack
                     (const Game__Card   *message,
                      uint8_t             *out);
size_t game__card__pack_to_buffer
                     (const Game__Card   *message,
                      ProtobufCBuffer     *buffer);
Game__Card *
       game__card__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__card__free_unpacked
                     (Game__Card *message,
                      ProtobufCAllocator *allocator);
/* Game__Hand methods */
void   game__hand__init
                     (Game__Hand         *message);
size_t game__hand__get_packed_size
                     (const Game__Hand   *message);
size_t game__hand__pack
                     (const Game__Hand   *message,
                      uint8_t             *out);
size_t game__hand__pack_to_buffer
                     (const Game__Hand   *message,
                      ProtobufCBuffer     *buffer);
Game__Hand *
       game__hand__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__hand__free_unpacked
                     (Game__Hand *message,
                      ProtobufCAllocator *allocator);
/* Game__Player methods */
void   game__player__init
                     (Game__Player         *message);
size_t game__player__get_packed_size
                     (const Game__Player   *message);
size_t game__player__pack
                     (const Game__Player   *message,
                      uint8_t             *out);
size_t game__player__pack_to_buffer
                     (const Game__Player   *message,
                      ProtobufCBuffer     *buffer);
Game__Player *
       game__player__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   game__player__free_unpacked
                     (Game__Player *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Game__Card_Closure)
                 (const Game__Card *message,
                  void *closure_data);
typedef void (*Game__Hand_Closure)
                 (const Game__Hand *message,
                  void *closure_data);
typedef void (*Game__Player_Closure)
                 (const Game__Player *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor game__card__descriptor;
extern const ProtobufCMessageDescriptor game__hand__descriptor;
extern const ProtobufCMessageDescriptor game__player__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_netpoker_2eproto__INCLUDED */
