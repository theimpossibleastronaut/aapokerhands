/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: netpoker.proto */

#ifndef PROTOBUF_C_netpoker_2eproto__INCLUDED
#define PROTOBUF_C_netpoker_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protobuf-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protobuf-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protobuf-c.
#endif


typedef struct Card Card;
typedef struct Hand Hand;
typedef struct Pos Pos;
typedef struct Player Player;


/* --- enums --- */


/* --- messages --- */

struct  Card
{
  ProtobufCMessage base;
  int32_t face_val;
  int32_t suit;
};
#define CARD__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&card__descriptor) \
, 0, 0 }


struct  Hand
{
  ProtobufCMessage base;
  size_t n_card;
  Card **card;
};
#define HAND__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&hand__descriptor) \
, 0,NULL }


struct  Pos
{
  ProtobufCMessage base;
  int32_t x;
  int32_t y;
};
#define POS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&pos__descriptor) \
, 0, 0 }


struct  Player
{
  ProtobufCMessage base;
  char *name;
  int32_t id;
  Pos *pos;
  Hand *hand;
  int32_t chips;
};
#define PLAYER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&player__descriptor) \
, (char *)protobuf_c_empty_string, 0, NULL, NULL, 0 }


/* Card methods */
void   card__init
                     (Card         *message);
size_t card__get_packed_size
                     (const Card   *message);
size_t card__pack
                     (const Card   *message,
                      uint8_t             *out);
size_t card__pack_to_buffer
                     (const Card   *message,
                      ProtobufCBuffer     *buffer);
Card *
       card__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   card__free_unpacked
                     (Card *message,
                      ProtobufCAllocator *allocator);
/* Hand methods */
void   hand__init
                     (Hand         *message);
size_t hand__get_packed_size
                     (const Hand   *message);
size_t hand__pack
                     (const Hand   *message,
                      uint8_t             *out);
size_t hand__pack_to_buffer
                     (const Hand   *message,
                      ProtobufCBuffer     *buffer);
Hand *
       hand__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   hand__free_unpacked
                     (Hand *message,
                      ProtobufCAllocator *allocator);
/* Pos methods */
void   pos__init
                     (Pos         *message);
size_t pos__get_packed_size
                     (const Pos   *message);
size_t pos__pack
                     (const Pos   *message,
                      uint8_t             *out);
size_t pos__pack_to_buffer
                     (const Pos   *message,
                      ProtobufCBuffer     *buffer);
Pos *
       pos__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   pos__free_unpacked
                     (Pos *message,
                      ProtobufCAllocator *allocator);
/* Player methods */
void   player__init
                     (Player         *message);
size_t player__get_packed_size
                     (const Player   *message);
size_t player__pack
                     (const Player   *message,
                      uint8_t             *out);
size_t player__pack_to_buffer
                     (const Player   *message,
                      ProtobufCBuffer     *buffer);
Player *
       player__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   player__free_unpacked
                     (Player *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Card_Closure)
                 (const Card *message,
                  void *closure_data);
typedef void (*Hand_Closure)
                 (const Hand *message,
                  void *closure_data);
typedef void (*Pos_Closure)
                 (const Pos *message,
                  void *closure_data);
typedef void (*Player_Closure)
                 (const Player *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor card__descriptor;
extern const ProtobufCMessageDescriptor hand__descriptor;
extern const ProtobufCMessageDescriptor pos__descriptor;
extern const ProtobufCMessageDescriptor player__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_netpoker_2eproto__INCLUDED */
